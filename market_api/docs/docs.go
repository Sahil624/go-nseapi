// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "email": "codingitperfect@protonmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/market_data/depth/{symbolName}": {
            "get": {
                "description": "Get depth of requested symbol on market. This is fetched via [https://www.nseindia.com/api/quote-equity?symbol=INFY\u0026section=trade_info] from NSE website",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Market Data"
                ],
                "summary": "Get depth of specific symbols",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Symbol Name",
                        "name": "symbolName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.ResponseHTTP"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.Depth"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/market_data/quote/{symbolName}": {
            "get": {
                "description": "Get quote of requested symbol on market. This is fetched via [https://www.nseindia.com/api/quote-equity?symbol=INFY] from NSE website",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Market Data"
                ],
                "summary": "Get quote of specific symbols",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Symbol Name",
                        "name": "symbolName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.ResponseHTTP"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.Quote"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/static_data/scrips": {
            "get": {
                "description": "Get all scrips listed on market. This is fetched via [https://archives.nseindia.com/content/equities/EQUITY_L.csv] from NSE website",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Static Data"
                ],
                "summary": "Get all Scrips",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.ResponseHTTP"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.Scrip"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "gorm.DeletedAt": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if Time is not NULL",
                    "type": "boolean"
                }
            }
        },
        "models.Depth": {
            "type": "object",
            "properties": {
                "ask_price": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "ask_qty": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "bid_prices": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "bid_qty": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "symbol": {
                    "$ref": "#/definitions/models.Scrip"
                },
                "symbol_id": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.Quote": {
            "type": "object",
            "properties": {
                "close": {
                    "type": "number"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "high": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "last_trade_price": {
                    "type": "number"
                },
                "low": {
                    "type": "number"
                },
                "open": {
                    "type": "number"
                },
                "symbol": {
                    "$ref": "#/definitions/models.Scrip"
                },
                "symbol_id": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.Scrip": {
            "type": "object",
            "properties": {
                "company_name": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "date_of_listing": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "face_value": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "isin_number": {
                    "type": "string"
                },
                "market": {
                    "$ref": "#/definitions/utils.MARKET"
                },
                "market_lot": {
                    "type": "string"
                },
                "paid_up_value": {
                    "type": "string"
                },
                "series": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "utils.MARKET": {
            "type": "string",
            "enum": [
                "NSECM"
            ],
            "x-enum-varnames": [
                "NSECM"
            ]
        },
        "utils.ResponseHTTP": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Go-NSEApi",
	Description:      "Unofficial NSE APIs for snapshot market data and static Data",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
